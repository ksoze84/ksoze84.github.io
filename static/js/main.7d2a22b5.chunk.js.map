{"version":3,"sources":["utils2.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["Input","props","className","icon","addClass","type","onChange","value","disabled","inputMode","pattern","placeholder","name","onKeyUp","onBlur","onKeyDown","list","max","size","readOnly","onClickIcon","onClick","info","IsActiveContext","React","createContext","menu_is_active","toggleActive","NavBar","menuOnClick","setState","state","this","class_name","Provider","children","Component","NavBarBrand","Consumer","noBurger","role","aria-label","aria-expanded","data-target","aria-hidden","NavBarMenu","id","closeOnClick","Cargando","faCircle","transform","faSpinner","spin","inverse","text","DataEpysa","param_data_url","abort","controller","dataUrl","ef_empty_nulls","timeout","true_false","params","parameters","param","toLowerCase","procedure","a","Promise","r","Timeout","setTimeout","_exec","AbortController","undefined","newParam","comillas","fetch","method","body","JSON","stringify","signal","Session","fun","add","label","conf","session","encodeURIComponent","then","res","json","Object","assign","ItemList","data","filtro","RegExp","filtro_vendedor","filtroVendedor","mesonUser","listItems","map","item","numero","toString","match","cliente","fecha","rut_cliente","vendedor","ListItem","superUser","it","its","parse","contador","color_estado","setEstado","estado","i","p","equipos","fecha_mod","Indicadores","filter","e","length","dato","negocios","MenuEstado","est","propEstado","onSelectEstado","filtro_estado","faCheck","faExclamationTriangle","resumen_estados","result","App","openNegocio","window","location","setFitlro","target","toggleMesAno","mes_ano","getNegocios","getResumen","filtroEstado","onSelectVendedor","cerrarSesion","href","data_source","cookies","Cookies","error","roles","vendedores","isLoaded","isLoadedRoles","redirect","exec","usuario","get","reg","includes","push","cCodPar","Valor_texto","message","meson","super","faBriefcase","faSearch","vend","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","console","log","onUpdate","onSuccess","catch","LoadApp","useState","loading","setLoading","ses","login","substring","ReactDOM","render","StrictMode","document","getElementById","process","publicUrl","URL","origin","addEventListener","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7d2a22b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport * as conf from './config.json';\r\n\r\nfunction Input(props)\r\n{\r\n  return (\r\n    <div className=\"field\">\r\n      <p className={\"control \" + (props.icon ? \"has-icons-right\" : \"\")}>\r\n        <input \r\n          className={\"input is-small \" + props.addClass + \" \" + (props.type === \"number\" ? \"has-text-right\" : \"\")} \r\n          onChange={props.onChange} \r\n          value={props.value} \r\n          disabled={props.disabled}\r\n          type={props.type === \"number\" ? \"text\" : props.type }     \r\n          inputMode={ props.type === \"number\" ? \"numeric\" : \"text\" } \r\n          pattern = { props.type === \"number\" ? \"[0-9]+([,.][0-9]+)?\" : \".*\" }\r\n          placeholder={props.placeholder} \r\n          name={props.name}\r\n          onKeyUp={props.onKeyUp}\r\n          onBlur={props.onBlur}\r\n          onKeyDown={props.onKeyDown}\r\n          list={props.list}\r\n          max={props.max}\r\n          size={props.size}\r\n          readOnly={props.readOnly} />\r\n        { props.icon &&\r\n          <span className={\"icon is-small is-right\" + ( props.onClickIcon ? \" icon-clickable\":\"\")} onClick={props.onClickIcon}>\r\n            <FontAwesomeIcon icon={props.icon} />\r\n          </span>\r\n        }\r\n        {props.info}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst IsActiveContext = React.createContext({ menu_is_active : false, toggleActive: () => {}  });\r\n\r\nclass NavBar extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = { menu_is_active  : false };\r\n  }\r\n\r\n  menuOnClick = () => {\r\n    this.setState(state => ({\r\n      menu_is_active: !state.menu_is_active\r\n    }));\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <nav className={\"navbar is-fixed-top \" + this.props.class_name}>\r\n        <div className=\"container is-max-desktop cnvb\">\r\n          <IsActiveContext.Provider value={{menu_is_active: this.state.menu_is_active, toggleActive : this.menuOnClick }}>\r\n            {this.props.children}\r\n          </IsActiveContext.Provider>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nfunction NavBarBrand(props){\r\n    return <IsActiveContext.Consumer>\r\n            { ({menu_is_active, toggleActive}) =>\r\n              <div className=\"navbar-brand nvb\">\r\n                {props.children}\r\n                { ! props.noBurger &&\r\n                <div role=\"button\" className={\"navbar-burger burger\" + ( menu_is_active === true ? \" is-active\" : \"\" ) } aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarMenu_\" onClick={toggleActive}>\r\n                  <span aria-hidden=\"true\"></span>\r\n                  <span aria-hidden=\"true\"></span>\r\n                  <span aria-hidden=\"true\"></span>\r\n                </div> }\r\n              </div> }\r\n          </IsActiveContext.Consumer>;\r\n}\r\n\r\nfunction NavBarMenu(props){\r\n    return <IsActiveContext.Consumer>\r\n            { value =>\r\n              <div className={\"navbar-menu\" + ( value.menu_is_active === true ? \" is-active\" : \"\" ) } id=\"navbarMenu_\" onClick={() => props.closeOnClick ? value.toggleActive() : null }>\r\n                {props.children}\r\n              </div> }\r\n          </IsActiveContext.Consumer>;\r\n}\r\n\r\nfunction Cargando(props){\r\n  return (\r\n  <div className=\"cargando-container\">\r\n    <div className=\"\">\r\n      <div className=\"fa-layers fa-fw\">\r\n        <FontAwesomeIcon icon={faCircle} transform=\"grow-8\"/>\r\n        <FontAwesomeIcon icon={faSpinner} spin inverse />\r\n      </div>  \r\n      <span> {props.text ? props.text : \"Cargando\"} ...</span>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nfunction ShowDato(props)\r\n{\r\n  return   <div className=\"column\">\r\n            <div>\r\n              <p className=\"heading\">{props.heading}</p>\r\n              <p className={\"subtitle \" + props.color}>{props.children}</p>\r\n            </div>\r\n          </div>;\r\n}\r\n\r\n//depende de Bulma\r\nclass Dropdown extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super();\r\n    this.state = { isActive : false }\r\n  }\r\n\r\n  dropdownOn = () => this.setState({isActive: true});\r\n\r\n  dropdownOff = () => this.setState({isActive: false});\r\n\r\n  render()\r\n  {\r\n    const isActve = this.state.isActive\r\n    return  <div className={\"dropdown \" + ( isActve ? \"is-active\" : \"\" )}>\r\n              {this.props.children({dropdownOn: this.dropdownOn, dropdownOff: this.dropdownOff})}\r\n            </div>\r\n  }\r\n}\r\n\r\nfunction DropdownTrigger(props)\r\n{\r\n  return  <div onFocus={props.dropdownOn} onBlur={() => setTimeout(props.dropdownOff, 150)} className=\"dropdown-trigger\">\r\n            {props.children}\r\n          </div>;\r\n}\r\n\r\nfunction DropDownMenu(props)\r\n{\r\n  return  <>\r\n            {(props.children && props.children.length > 0 ) && \r\n            <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\" onClick={props.onSelect ? props.onSelect : null}>\r\n              <div className=\"dropdown-content\">\r\n                {props.children}\r\n              </div>\r\n            </div>}\r\n          </>;\r\n}\r\n\r\nfunction ShowInput(props)\r\n{\r\n  return    <div className={\"entrada-dato \" + props.className}>\r\n              <p className={\"heading is-size-7 \" + props.headingClass}>{props.heading}</p>\r\n              <div className={\"subtitle \" + props.color}>{props.children}</div>\r\n            </div>;\r\n}\r\n\r\n\r\nclass DataEpysa\r\n{\r\n  constructor(param_data_url)\r\n  {\r\n    if(param_data_url)\r\n      this.dataUrl = param_data_url;\r\n    else\r\n      this.dataUrl = \"https://sienet.epysa.cl/sie-android/Scripts/Inc/data.asp\";\r\n\r\n    this.ef_empty_nulls \t= true;\r\n    this.controller       = null;\r\n    this.timeout          = null;\r\n  }\r\n\r\n  abort = () => { if(this.controller) this.controller.abort();}\r\n\r\n  set data_url(param_data_url)\r\n  {\r\n    this.dataUrl = param_data_url;\r\n  }\r\n\r\n  set emptyNulls(true_false)\r\n  {\r\n    this.ef_empty_nulls = ( true_false ?  true : false )\r\n  }\r\n\r\n  comillas(params)\r\n  {\r\n    const parameters = {...params};\r\n  \tfor (var param in parameters)\r\n  \t{\r\n  \t\tif ( typeof parameters[param] === 'string' && ( parameters[param] === \"\" || parameters[param] === null ) && this.ef_empty_nulls  )\r\n  \t\t\tparameters[param] = \"null\";\r\n  \t\telse if( typeof parameters[param] === 'string' && parameters[param].toLowerCase()  !== \"null\" )\r\n  \t\t\tparameters[param] = \"'\" +  parameters[param] + \"'\";\r\n    }\r\n    return parameters\r\n  }\r\n\r\n  async exec(procedure, parameters, timeout)\r\n  {\r\n    if (timeout)\r\n      return await new Promise( r => {   \r\n        this.Timeout = setTimeout( () => r(\r\n          this._exec(procedure,parameters)\r\n        ), timeout);\r\n      });\r\n    else\r\n      return await this._exec(procedure,parameters);\r\n  }\r\n\r\n\r\n\r\n  async _exec(procedure, parameters)\r\n  {\r\n\r\n    this.controller = new AbortController();\r\n\r\n    if (parameters === null || parameters === undefined)\r\n      parameters = {};\r\n\r\n  \tconst newParam = this.comillas(parameters);\r\n\r\n  \tnewParam.procedure = \"EXEC \" + procedure ;\r\n\r\n/*     for (let par in newParam)\r\n    {\r\n      const value = newParam[par] === null || newParam[par] === undefined ? \"null\" : newParam[par] \r\n      param  = param + par + \"=\" + value + \"&\";\r\n    } */\r\n\r\n    return await fetch( this.dataUrl,\r\n      {\r\n        method \t: 'POST',\r\n        //headers : { 'Content-Type': 'application/json;charset=UTF-8' },\r\n        body    : JSON.stringify(newParam),\r\n        signal  : this.controller.signal\r\n      });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction toMoney(n){\r\n  if (n || n === 0)\r\n    if ( isNaN(toNumber(n)) )\r\n      return n;\r\n    else\r\n      return Number(toNumber(n).toFixed(0)).toLocaleString();\r\n  else \r\n    return \"\";\r\n}\r\n\r\nfunction toNumber(str){\r\n\r\n  let result;\r\n  ////console.log(\"IN: \" + str + \" \" + typeof str)\r\n  if (typeof str === \"string\" )\r\n  {\r\n    const str_limpio  = str.replace( /,/g, \"\" )\r\n    if (! isNaN(str_limpio) && str.slice(-1) !== \".\" && str.length > 0 ){\r\n      const numero = Number( str_limpio );\r\n      result = isNaN(numero) ? str : numero;\r\n    } \r\n    else\r\n      result = str;\r\n  }\r\n  else result = str;\r\n  ////console.log(\"OUT: \" + result + \" \" + typeof result)\r\n  return result;\r\n}\r\n\r\nfunction toBinaryHex(str)\r\n{\r\n  return str.split(\"\").reduce((hex,c)=>hex+=c.charCodeAt(0).toString(16).padStart(4,\"0\"),\"\")\r\n}\r\n\r\nfunction percent(n)\r\n{\r\n  if (n)\r\n    if ( typeof toNumber(n) !== \"number\" )\r\n      return n;\r\n    else\r\n      return Number( Number(n).toFixed(2)  );\r\n  else \r\n    return \"\";\r\n}\r\n\r\n\r\nfunction string_time(hr, mn)\r\n{\r\n  const horas   = hr ? hr : 0;\r\n  const minutos = mn ? mn : 0;\r\n  return horas + \":\" + ( minutos < 10 ? \"0\" +  minutos : minutos);\r\n}\r\n\r\n\r\nfunction Modal(props)\r\n{\r\n\r\n  return  <div className={\"modal \" + ( props.isActive ? \"is-active\" : \"\" )  }>\r\n            <div className=\"modal-background\" onClick={props.toggleActive}></div>\r\n            <div className=\"modal-content\">\r\n              {props.children}\r\n            </div>\r\n          </div>;\r\n}\r\n\r\nclass Session{\r\n  constructor( fun ){\r\n    fetch(\r\n      conf.configs.session\r\n    )\r\n      .then( res => res.json() )\r\n      .then( res => { Object.assign(this, res)} )\r\n      .then( () => { if(fun) fun(this) }  )\r\n  }\r\n\r\n  add = (label, value) => {\r\n    this[label] = value;\r\n    fetch(\r\n      conf.configs.session + \"?action=add&label=\" + encodeURIComponent(label) + \"&value=\" + encodeURIComponent(value)\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport { Input, NavBar, NavBarBrand, DataEpysa, NavBarMenu, Dropdown, DropDownMenu, DropdownTrigger, toMoney, Cargando, Modal, toBinaryHex, ShowDato, ShowInput, percent, toNumber, string_time, Session}","import React from 'react';\r\nimport './App.sass';\r\nimport { Input, NavBar, NavBarBrand, NavBarMenu, DataEpysa, Cargando } from './utils2.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBriefcase, faSearch, faCheck, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport Cookies from 'universal-cookie';\r\nimport * as conf from './config.json';\r\n\r\nclass App extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.data_source = new DataEpysa(conf.configs.DataEpysa);\r\n    this.cookies = new Cookies();\r\n    this.state =\r\n    {\r\n      error                       : null,\r\n      data                        : [],\r\n      roles                       : {},\r\n      vendedores                  : [],\r\n      isLoaded                    : false,\r\n      isLoadedRoles               : false,\r\n      redirect                    : 0,\r\n      filtro                      : this.props.cliente ? this.props.cliente : '',\r\n      filtro_estado               : '',\r\n      filtro_vendedor             : null,\r\n      resumen_estados             : [],\r\n      mes_ano                     : 0\r\n    }\r\n\r\n  }\r\n\r\n  openNegocio = (numero) => {\r\n    window.location.assign( \"/sie-android/Paginas/scr_app/enegocio?superv=si&id=\" + numero );\r\n  };\r\n\r\n  setFitlro = (e) =>{\r\n    this.setState({\r\n      filtro : e.target.value\r\n    });\r\n  }\r\n\r\n  toggleMesAno = () =>{\r\n    this.setState({mes_ano : this.state.mes_ano === 1 ? 0 : 1}, () =>  {this.getNegocios(); this.getResumen()});\r\n  }\r\n\r\n  onSelectEstado = (filtroEstado) =>{\r\n    this.setState({filtro_estado : filtroEstado}, () =>  this.getNegocios());\r\n  }\r\n\r\n  onSelectVendedor = (filtroVendedor) =>{\r\n    this.setState({filtro_vendedor : filtroVendedor});\r\n  }\r\n\r\n  getResumen()\r\n  {\r\n    this.data_source.exec(\r\n      'SCR_RESUMEN_ESTADOS',\r\n      { mes_ano : this.state.mes_ano, usuario : this.cookies.get(\"user\") }\r\n    )\r\n      .then (res => res.json())\r\n      .then ( result => {\r\n        this.setState({ resumen_estados : result.data })\r\n      })\r\n  \r\n  }\r\n\r\n  getNegocios()\r\n  {\r\n    this.setState({isLoaded : false});\r\n    this.data_source.exec(\r\n      'SCR_LISTA_SUPERVISOR',\r\n      { usuario : this.cookies.get(\"user\"),\r\n        mes_ano : this.state.mes_ano,\r\n        estado  : this.state.filtro_estado === '' ? \"null\" : this.state.filtro_estado }\r\n    )\r\n      .then (res => res.json())\r\n      .then (\r\n        result => {\r\n          //console.log(result.data);\r\n\r\n          const vendedores = [];\r\n\r\n          if ( result.data )\r\n            for ( let reg of result.data ){\r\n              if( ! vendedores.includes( reg.vendedor.toLowerCase() ) )\r\n                vendedores.push(reg.vendedor.toLowerCase());\r\n            }\r\n\r\n          this.setState({\r\n            isLoaded                    : true,\r\n            vendedores                  : vendedores,\r\n            data                        : result.data ? result.data : []\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            isLoaded  : true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    //console.log(this.props.session);\r\n\r\n    this.getNegocios()\r\n    this.getResumen()\r\n\r\n    this.data_source.exec(\r\n      'PAR_ListaParametros',\r\n      { cCodPar : \"SCR_USR\" }\r\n    )\r\n      .then (res => res.json())\r\n      .then (\r\n        result => {\r\n          //console.log(result.data);\r\n          const roles     = result.data && result.data[0] ? JSON.parse( result.data[0].Valor_texto ) : null;\r\n          //const superUser = roles.super && roles.super.includes( this.cookies.get(\"user\") );\r\n           \r\n          this.setState({\r\n            isLoadedRoles     : true,\r\n            roles             : roles ? roles : []\r\n            //,filtro_estado      : superUser ? 'SBY' : ''\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            isLoadedRoles  : true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  cerrarSesion = () => { window.location.assign(\"/sie-android/Paginas/lgus/?do=logout&redurl=\" + encodeURIComponent(window.location.href) ) }\r\n\r\n  render()\r\n  {\r\n    const { error, data, roles , isLoaded, filtro, filtro_estado, filtro_vendedor, isLoadedRoles, vendedores, resumen_estados, mes_ano } = this.state;\r\n  \r\n    if (error)\r\n      return <div className=\"app-error\">Error: {error.message}</div>;\r\n    else if ( ! ( isLoaded && isLoadedRoles ) )\r\n      return <Cargando />\r\n    else{\r\n\r\n      const mesonUser = roles.meson && roles.meson.includes( this.cookies.get(\"user\") );\r\n      const superUser = roles.super && roles.super.includes( this.cookies.get(\"user\") );\r\n\r\n      return (\r\n        <>\r\n        <NavBar class_name=\"is-danger\">\r\n          <NavBarBrand>\r\n            <div className=\"navbar-item\" >\r\n              <span className=\"icon-text\">\r\n                <span className=\"icon\"><FontAwesomeIcon size=\"lg\" icon={faBriefcase}/></span>\r\n                <span>NVD's</span>\r\n              </span>\r\n            </div>\r\n            <div className=\"navbar-item put-right\" >\r\n              <Input onChange={this.setFitlro} icon={faSearch} placeholder=\"Buscar\" type=\"text\" />\r\n            </div>\r\n          </NavBarBrand>\r\n          <NavBarMenu closeOnClick=\"true\" >\r\n            <div className=\"navbar-end\">\r\n              <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                <p className=\"navbar-link\">Estado & colores</p>\r\n                <div className=\"navbar-dropdown\">\r\n                  { resumen_estados.map( e => <MenuEstado key={e.estado} estado={e.estado} onSelectEstado={this.onSelectEstado} resumen_estados={resumen_estados} filtro_estado={filtro_estado} /> ) }\r\n                </div>\r\n              </div>\r\n              {  ( mesonUser || superUser ) &&\r\n                  <>\r\n                  <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                    <p className=\"navbar-link\">Periodo</p>\r\n                    <div className=\"navbar-dropdown\">\r\n                      <div className=\"buttons has-addons is-centered\">\r\n                        <button \r\n                          className={\"button is-small \" + (mes_ano === 0 ? \"is-info is-selected\" : \"has-text-light\") } \r\n                          onClick={this.toggleMesAno}>\r\n                            MES\r\n                        </button>\r\n                        <button \r\n                          className={\"button is-small \" + (mes_ano === 0 ? \"has-text-light\" : \"is-success is-selected\") } \r\n                          onClick={this.toggleMesAno}>\r\n                            AÑO\r\n                        </button>\r\n                      </div>  \r\n                    </div>\r\n                  </div>\r\n                  <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                    <p className=\"navbar-link\">Vendedores</p>\r\n                    <div className=\"navbar-dropdown\">\r\n                      {\r\n                        vendedores.map( vend =>\r\n                          <div key={vend} className=\"navbar-item\" onClick={() => this.onSelectVendedor( filtro_vendedor === vend ? null : vend )}>\r\n                            <p>{vend.toLowerCase()} { filtro_vendedor === vend && <FontAwesomeIcon icon={faCheck} />}</p>\r\n                          </div>\r\n                          )\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </>\r\n              }\r\n              <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                <p className=\"navbar-link\">{ this.cookies.get(\"nombre\") }</p>\r\n                <div className=\"navbar-dropdown\">\r\n                  <div className=\"navbar-item\">\r\n                    <div className=\"buttons\">\r\n                      <button className=\"button is-danger is-light is-small\" onClick={this.cerrarSesion}>\r\n                        Cerrar Sesion\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"navbar-item\">\r\n                <div onClick={ () => window.location.reload() } className=\"has-text-grey-lighter\" >\r\n                  v3\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n        </NavBarMenu>\r\n        </NavBar>\r\n        <section className=\"section\">\r\n            <div className=\"container is-max-desktop\">\r\n              <ItemList \r\n                data            ={data} \r\n                onClick         ={this.openNegocio} \r\n                filtro          ={filtro} \r\n                filtroEstado    ={filtro_estado} \r\n                filtroVendedor  ={filtro_vendedor}\r\n                mesonUser       ={ mesonUser } \r\n                superUser       ={ superUser }/>\r\n            </div>\r\n        </section>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction ItemList(props)\r\n{\r\n  const data = props.data;\r\n  const filtro = new RegExp( props.filtro.toLowerCase(), \"g\" );\r\n  const filtro_vendedor = props.filtroVendedor;\r\n  const mesonUser = props.mesonUser;\r\n\r\n  const listItems = data.map( item =>\r\n    {\r\n      if (  ( item.numero.toString().match( filtro ) \r\n              || item.cliente.toLowerCase().match( filtro ) \r\n              || item.fecha.match( filtro ) \r\n              || item.rut_cliente.toLowerCase().match( filtro ) ) \r\n          &&\r\n            ( !filtro_vendedor \r\n              || filtro_vendedor === item.vendedor.toLowerCase() ) )\r\n        return ( <ListItem key={item.numero} item={item} superUser={props.superUser}  mesonUser={mesonUser} onClick={ () => props.onClick(item.numero) }  /> );\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"app-listado\">{listItems}</div>\r\n  );\r\n}\r\n\r\n\r\nfunction ListItem(props)\r\n{\r\n  const item    = props.item;\r\n  let it        = \"\";\r\n  const its     = JSON.parse(item.its);\r\n  let contador  = 0;\r\n  let color_estado = setEstado(item.estado)[1];\r\n\r\n  for (let i in its){\r\n    contador ++;\r\n\r\n    if (contador > 1)\r\n      it = it + \" | \";\r\n\r\n    it = it + its[i].p ;\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"box\" onClick={ props.onClick } >\r\n        <div className=\"line-item\">\r\n          <div className=\"\">\r\n            <strong className={color_estado}>N° {item.numero}</strong>\r\n            { (props.mesonUser || props.superUser ) &&\r\n              \" [\" + item.vendedor.toLowerCase() + \"]\" \r\n            }\r\n          </div>\r\n          <div className=\"text-overflow\"><strong className={color_estado}>{item.estado}</strong></div>\r\n        </div>\r\n        <div className=\"line-item\">\r\n          <div className=\"text-overflow\">{item.cliente}</div>\r\n          <div>Q:<span className=\"has-text-weight-bold\">{item.equipos}</span></div>\r\n        </div>\r\n        <div className=\"line-item\">\r\n          <div className=\"text-overflow\">{it}</div>\r\n          <div className=\"\"><small>{item.fecha_mod}</small></div>\r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nfunction Indicadores(props){\r\n  const data = props.data.filter( e => e.estado === props.estado );\r\n\r\n  if( data.length === 1 )\r\n  {\r\n    const dato = data[0]\r\n    return <span>[ N:<span className=\"has-text-weight-bold\">{dato.negocios}</span>, E:<span className=\"has-text-weight-bold\">{dato.equipos}</span> ]</span>;\r\n  }\r\n  else\r\n    return <span>[ N:0, E:0 ]</span>;\r\n\r\n}\r\n\r\nfunction MenuEstado(props)\r\n{\r\n  const est = props.estado;\r\n  const propEstado = setEstado(est);\r\n\r\n  return  <div className=\"navbar-item\" onClick={() => props.onSelectEstado( props.filtro_estado === est ? \"\" : est )}>\r\n            <div className=\"menu-estado w100\">\r\n              <span className={propEstado[1] + \" mr5\" }>{propEstado[0]} { props.filtro_estado === est && <FontAwesomeIcon icon={faCheck} />}</span>\r\n              <span className={propEstado[1]}>  {est === \"SBY\" && <FontAwesomeIcon icon={faExclamationTriangle} />}   <Indicadores estado={est} data={props.resumen_estados} /> </span>\r\n            </div>\r\n          </div>;\r\n\r\n}\r\n\r\nfunction setEstado(est)\r\n{\r\n  let result = [\"\",\"\"];\r\n\r\n  switch (est) {\r\n    case \"INI\":\r\n      result = [\"Inicial\", \"\"];\r\n      break;\r\n    case \"RCL\":\r\n      result = [\"Rechaza Cliente\", \"has-text-warning-dark\"];\r\n      break;\r\n    case \"SBY\":\r\n      result = [\"Aut. Dscto.\", \"pink\"];\r\n      break;\r\n    case \"ACL\":\r\n      result = [\"Eval. Cliente\", \"has-text-warning\"];\r\n      break;\r\n    case \"PRE\":\r\n      result = [\"Preparándose\", \"has-text-danger\"];\r\n      break;\r\n    case \"EVA\":\r\n      result = [\"Evaluación\", \"has-text-info\"];\r\n      break;\r\n    case \"VAL\":\r\n      result = [\"Validada\", \"has-text-primary\"];\r\n      break;\r\n    case \"VLM\":\r\n      result = [\"Ev. Comercial\", \"has-text-primary\"];\r\n      break;\r\n    case \"AUT\":\r\n      result = [\"Autorizada\", \"has-text-success\"];\r\n      break;\r\n    case \"REC\":\r\n      result = [\"Rechazada\", \"has-text-grey-light\"];\r\n      break;\r\n    case \"FAV\":\r\n      result = [\"Facturada\", \"has-text-success\"];\r\n      break;\r\n    default : result = \"\";\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  console.log(process.env.NODE_ENV);\r\n  console.log('serviceWorker' in navigator);\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    console.log(publicUrl.origin);\r\n    console.log(window.location.origin);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport { Cargando, Session } from './utils2';\r\n\r\nfunction LoadApp ()\r\n{\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const session = new Session( ses => {\r\n    if (! ses.login && window.location.href.substring(0,16) !== \"http://localhost\" )\r\n      window.location.assign(\"/sie-android/Paginas/lgus/?redurl=\" + encodeURIComponent(window.location.href) );\r\n    else\r\n      setLoading( false );\r\n  });\r\n\r\n  return loading ? <Cargando /> : <App session={session} /> ;\r\n\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <LoadApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\nserviceWorkerRegistration.register();"],"sourceRoot":""}